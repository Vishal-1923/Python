This is part of Caleb Curry's tutorial for API.

Right now, we r trying to consume 'Stack Overflow' API.

We can get access to all stack overflow questions via the their api. So we'll use that for our understanding...

go to api.stackexchange.com
go to documentation.
go to questions under questions category.

/2.3/questions?order=desc&sort=activity&site=stackoverflow --> this is the api endpoint for questions.
observation: there are some query parameters involved like order, sort.

if u wanna see the actual result just copy this and paste it over the url space and write it after stackexchange.com
like this: https://api.stackexchange.com/2.3/questions?order=desc&sort=activity&site=stackoverflow
this will show u all the questions.

in order to work with api, use a tool named "POSTMAN", as it provides heck load of features....
just put the url in url's place and hit send with GET attribute and ta-da, u will see the request. This request is in form of JSON.

Now we will make our own app just to consume this api.

when u just print response via print(response) --> u will get <Response [200]>  which basically means ok. 200 is a response status code.
to see data, just add .json() to it.
we can iterate over all the lists of questions and even grab something more specifically like :
for question in response.json()['items']:
    print(question)
    print()

this is how u can consume an api and so your customization as per your need...

--------------------------------------------------------------------------------------------------------------------------------------------------------------

This is for my own API use:
1. setup virtual environment
cmd : python3 -m venv .venv  <---------- will create a virtual environment
cmd : source .venv/bin/activate <------- will activate this virtual environment.
creating and working on a virtual env is a good practice when u wanna seperate out the dependencies of your project when compared to global level.

2. installing dependencies
cmd : pip3 install flask <-------------------- will download the flask
cmd : pip3 install flask-sqlalchemy <--------- will download the ORM - Object Relation Maping 
cmd : pip3 freeze > requirements.txt <-------- will create a file which will contain all the requirements i.e., dependencies.

3. will create a basic flask application
from flask import Flask
app = Flask(__name__)
-> these 2 line sets up flask.

route is nothing but an endpoint.

in order to run my application.py file, I need to set up some environment variables, they are:
-> export FLASK_APP=application.py
-> export FLASK_ENV=devlopment
-> flask run
this is required everytime i open my terminal i.e., as soon as i close my terminal, these settings get away.
i think this is some another way to execute .py becoz in earlier tutorials this was not required. -----------> ask rishu or search!!!!!!

now we will learn to do a GET request.
can be simply done like this:
@app.route('/drinks')
def get_drinks():
	return {"drinks" : "drink data"}

now lets connect it to a db.
in order to connect to a db, we have to define all of the things we want to store in our db as models, so we r going to create a class


now we will setup db with a table for drinks ------- easiest way is Python terminal
to create a table -> db.create_all()


we have our db ready, now what we have to do is do GET, POST, DELETE things

for post use postman :)

now deletion

